@rendermode InteractiveServer
@page "/"
@using AiPeopleFinder.Application
@using AiPeopleFinder.Domain
@inject IPeopleFinderService PeopleFinderService

<div class="center">
    <h2 class="title">People Finder</h2>

    <form class="search" @onsubmit="OnSubmit">
        <input @bind="_query" @bind:event="oninput" placeholder="Enter email and/or name" />
        <button type="submit" class="btn" disabled="@_busy">Find</button>
    </form>

    @if (_busy)    { <div class="hint">Searching…</div> }
    @if (_error is not null) { <div class="err">@_error</div> }

    @if (_personProfile is not null)
    {
        <div class="card">
            <h3>@_personProfile.Name</h3>

            @if (!string.IsNullOrWhiteSpace(_personProfile.Company))
            { <p><b>Company:</b> @_personProfile.Company</p> }

            @if (!string.IsNullOrWhiteSpace(_personProfile.CurrentRole))
            { <p><b>Current role:</b> @_personProfile.CurrentRole</p> }

            @if (_personProfile.KeyFacts?.Count > 0)
            {
                <p><b>Key Facts:</b></p>
                <ul>
                    @foreach (var fact in _personProfile.KeyFacts) { <li>@fact</li> }
                </ul>
            }

            @if (!string.IsNullOrWhiteSpace(_personProfile.PastRolesCompanies))
            { <p><b>Previous companies or roles:</b> @_personProfile.PastRolesCompanies</p> }
        </div>
    }
</div>

@code {
    string? _query;
    bool _busy;
    string? _error;
    PersonProfile? _personProfile;

    async Task OnSubmit()
    {
        _error = null; _personProfile = null;
        if (string.IsNullOrWhiteSpace(_query))
        {
            _error = "Enter query.";
            return;
        }

        try
        {
            _busy = true;
            var result = await PeopleFinderService.GetSearchRequestDetails(_query!);
            _personProfile = result?.Profile;
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _busy = false;
        }
    }
}